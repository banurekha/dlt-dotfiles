#!/bin/sh

fancy_echo 'Configuring utility packages ...'
brew bundle --file=- <<EOF
tap "homebrew/versions"
brew "diff-so-fancy"
brew "dos2unix"
brew "exercism"
brew "go"
brew "godep"
brew "ghostscript"
brew "graphviz", args: ["with-app"]
brew "imagemagick"
brew "jq"
brew "phantomjs"
brew "redis"
brew "shellcheck"
brew "terminal-notifier"
brew "tree"
brew "wget"
brew "wrk"
brew "bash-completion"

tap "ndlib/dlt"
brew "go-jira"

tap "ndlib/dlt"
brew "go-jira"

# Loading older version of MySQL gem for CurateND compatibility
# gem mysql2 '0.3.13' supports MySQL ~> 5.6
brew "homebrew/versions/mysql56"

# Loading older version of libv8 in order for therubyracer to compile in CurateND
brew "homebrew/versions/v8-315"
EOF

fancy_echo 'Development environment setup ...'
GIT_DIR="$HOME/git/"
mkdir -p "$GIT_DIR"

fancy_echo 'Configuring ruby for CurateND ...'
brew link --force v8-315

fancy_echo 'Configuring MySQL for CurateND ...'
brew link --force mysql56

curatend_dir="${GIT_DIR}curate_nd/"
if [ -d "$curatend_dir" ]; then
  curatend_ruby_version_file="${curatend_dir}.ruby-version"
  if [ -f "$curatend_ruby_version_file" ]; then
    rbenv install -s "$(cat "$curatend_ruby_version_file")"
  else
    fancy_echo 'Cannot find .ruby_version file for CurateND'
  fi
else
  fancy_echo "Please clone the CurateND repo into ${curatend_dir}"
fi

fancy_echo 'Go development environment setup ...'
GOPATH="$HOME/gocode/"
mkdir -p "$GOPATH"

fancy_echo 'Configuring Java ...'
brew cask install java

fancy_echo 'Configuring ruby for Sipity ...'
sipity_dir="${GIT_DIR}sipity/"
if [ -d "$sipity_dir" ]; then
  sipity_ruby_version_file="${sipity_dir}.ruby-version"
  if [ -f "$sipity_ruby_version_file" ]; then
    rbenv install -s "$(cat "$sipity_ruby_version_file")"
  else
    fancy_echo 'Cannot find .ruby_version file for Sipity'
  fi
else
  fancy_echo "Please clone the sipity repo into ${sipity_dir}"
fi

fancy_echo 'Configuring Redis ...'
redis_config_dir="$HOME/.redis"
mkdir -p "$redis_config_dir"
redis_config_file="${redis_config_dir}/redis.conf"
if [ -f "$redis_config_file" ]; then
  fancy_echo 'Local Redis config already present'
else
  fancy_echo 'No local Redis config found. Copying the default'
  cp /usr/local/etc/redis.conf "$redis_config_file"
fi

fancy_echo 'Cleaning up old Homebrew formulae ...'
mkdir -p /Library/Caches/Homebrew/Casks
brew cleanup
brew cask cleanup

fancy_echo 'Checking for stashed changes in Cellar ...'
if [ "$(cd /usr/local && git stash list)" ]; then
  fancy_echo 'Restoring stashed changes to Cellar ...'
  cd /usr/local && git stash pop
else
  fancy_echo 'No changes are stashed'
fi
